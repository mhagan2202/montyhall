% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/monty-hall-problem.R
\name{open_goat_door}
\alias{open_goat_door}
\title{The reveal of the infamous goat door}
\usage{
open_goat_door(game, a.pick)
}
\arguments{
\item{The}{first argument is the same from the 'select_doors' script which is
that the object doors holds a vector of numerical values from 1 to 3. The
next argument and the rest to come are based of if conditions. Which allows
for the system to run and tests to see if conditions are met based on the
arguments listed. In this case, if 'a.pick' that has been selected by the
'select_doors' function happens to be a car, then the 'goat.doors' cannot be
the one with the car. The 'opened.door' object is then stating that from this
logic then the door that is allowed to be open are the 'goat.doors' and
the size of this 'sample' that we are select from is 1.Which this then allows
the program to select only 1 of the doors that has a goat in them to remove.
Same goes for the other if statement which basically states that if the
a.pick is a goat, then the 'opened.doors' cannot be the one with the car AND
the opened door cannot be the a.pick, since that would ruin the whole point
of the game. The reason this opened.door is a conditional statement is because
the choice is a little more clear for the program to pick the door that
has the goat behind it. If the user has already picked a goat door then there
is really only one other goat door for the program to pick. While for the
previous opened.door object needed to first identify which doors are
considered 'goat.doors' and then randomly sampling between the two of them
Since there are two doors to choose from you have to logically allow the
program to pick one of the two.}
}
\value{
The return is the opened.door object which has been thoroughly explained
on the conditions that surround the object based on the if condition of
a.pick.
}
\description{
This function essentially opens one of the goat doors that the user
has not picked based on the 3 doors in total.This tactic is used to give
the user a choice to either stay with their current door or switch to the
other door giving the user a false perception that the odds are no 50/50.
}
\details{
This piece is strictly written to open 1 of the 3 doors on the condition
that it cannot be one of the doors that the user picked and it can't
be one of the doors that has the car behind it.Therefore the code can
appear to be more complex than it actually is. The difficulty is assigning
doors to their proper homes within the code which would then allow the
program to effectively implement the conditions that have been stated prior.
}
\examples{
open_goat_door()
}
